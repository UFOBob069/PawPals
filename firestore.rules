rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if user is accessing their own document
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Allow anyone to read job listings
    match /jobs/{jobId} {
      allow read: if true;
      allow create: if isAuthenticated();
      allow update, delete: if isAuthenticated() && request.auth.uid == resource.data.ownerUid;
    }
    
    // Allow access to user profiles and their nested collections
    match /users/{userId} {
      allow read: if true; // Anyone can read user profiles
      allow write: if isOwner(userId);
      
      // Allow access to nested reviews collection
      match /reviews/{reviewId} {
        allow read: if true; // Anyone can read reviews
        allow create: if isAuthenticated() 
          && request.resource.data.reviewerId == request.auth.uid
          && userId != request.auth.uid; // Can't review yourself
        allow update, delete: if isAuthenticated() 
          && resource.data.reviewerId == request.auth.uid; // Only review author can edit/delete
      }
    }
    
    // Allow access to root-level reviews collection
    match /reviews/{reviewId} {
      allow read: if true; // Anyone can read reviews
      allow create: if isAuthenticated() 
        && request.auth.uid == request.resource.data.reviewerId
        && request.auth.uid != request.resource.data.providerId; // Can't review yourself
      allow update, delete: if isAuthenticated() 
        && resource.data.reviewerId == request.auth.uid; // Only review author can edit/delete
    }
    
    // Allow authenticated users to read and write their own messages
    match /messages/{messageId} {
      allow read: if isAuthenticated() 
        && (request.auth.uid in resource.data.participants);
      allow create: if isAuthenticated() 
        && request.resource.data.senderUid == request.auth.uid;
    }
    
    // Allow authenticated users to read service listings
    match /services/{serviceId} {
      allow read: if true; // Allow public read access to services
      allow write: if isAuthenticated() && request.auth.uid == resource.data.userId;
    }
    
    // Allow authenticated users to read and write their own bookings
    match /bookings/{bookingId} {
      allow read, write: if isAuthenticated() && 
        (request.auth.uid == resource.data.userId || 
         request.auth.uid == resource.data.providerId);
    }
  }
}